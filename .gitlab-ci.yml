---
include:
  - project: invenia/gitlab-ci-helper
    file: /templates/julia.yml

variables:
  STACK_NAME_PREFIX: sandbox-awsbatch
  CLOUDSPY_IMAGE: 468665244580.dkr.ecr.us-east-1.amazonaws.com/cloudspy

# Variables that require shell execution or depend on a variable that does
.setup: &setup
  |
  echo "$ci_init" > ci_init && source ci_init && rm ci_init
  STACK_NAME=$(stack_name $STACK_NAME_PREFIX)
  ACCOUNT_ID=$(aws_account_id)

"Setup Environment":
  stage: setup
  except:
    - tags
    - master
    - /^.+\/.*master$/  # e.g. jh/validate-master
  when: always
  environment:
    name: branch/$CI_COMMIT_REF_SLUG
    on_stop: "Delete Environment"
  script:
    - echo "Setting up environment"

"Create Stack":
  stage: setup
  image: $CLOUDSPY_IMAGE
  tags:
    - docker-ci
    - ci-account
    # TODO: Needed until cloudspy supports multi-arch images:
    # https://gitlab.invenia.ca/invenia/cloudspy/-/issues/85
    - x86
  before_script:
    - *setup
  script:
    - aws cloudformation validate-template --template-body file://test/batch.yml
    - |
      aws-deploy-stack \
        --role-arn arn:aws:iam::${ACCOUNT_ID}:role/CloudFormationAdmin \
        --stack-name $STACK_NAME \
        --template-file ./test/batch.yml \
        --wait \
        --params CIRoleArn=arn:aws:iam::${ACCOUNT_ID}:role/GitLabCIRunnerRole

.test:
  before_script:
    - echo "$ci_init" > ci_init && source ci_init && rm ci_init
    # `git` needed to determine latest release of Julia
    - package_install git

.test_batch:
  stage: test
  tags:
    - amzn2
    - docker-build
    - ci-account
  variables:
    TESTS: "batch"  # Runs the online tests against AWS
  before_script:
    - *setup
    - assume_test_role
    - export AWS_STACKNAME=$STACK_NAME  # Needed for tests
  extends: .test_shell

"1.3 (AWS Batch)":
  variables:
    JULIA_VERSION: "1.3"
  extends: .test_batch

"1.4 (AWS Batch)":
  variables:
    JULIA_VERSION: "1.4"
  extends: .test_batch

"Nightly (AWS Batch)":
  variables:
    JULIA_VERSION: "nightly"
  allow_failure: true
  extends: .test_batch

.delete: &delete
  image: $CLOUDSPY_IMAGE
  tags:
    - docker-ci
    - ci-account
    # TODO: Needed until cloudspy supports multi-arch images:
    # https://gitlab.invenia.ca/invenia/cloudspy/-/issues/85
    - x86
  before_script:
    - *setup
  script:
    - eval $(aws-stack-outputs $STACK_NAME)
    - |
      aws cloudformation delete-stack \
        --role-arn arn:aws:iam::${ACCOUNT_ID}:role/CloudFormationAdmin \
        --stack-name $STACK_NAME
    - aws cloudformation wait stack-delete-complete --stack-name $STACK_NAME

"Delete Environment":
  stage: teardown
  except:
    - tags
    - master
    - /^.+\/.*master$/
  when: manual
  environment:
    name: branch/$CI_COMMIT_REF_SLUG
    action: stop
  dependencies:
    - "Create Stack"
  variables:
    GIT_STRATEGY: none  # Avoid checking out a branch after deletion
  <<: *delete

"Delete Stack":
  stage: teardown
  only:
    - tags
    - master
    - /^.+\/.*master$/
  when: always
  <<: *delete
